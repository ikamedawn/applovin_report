[tool]
[tool.poetry]
name = "applovin_report"
version = "0.1.7"
homepage = "https://github.com/ikamedawn/applovin_report"
description = "Applovin Report APIs wrapper."
authors = ["Dawn <minhpc@ikameglobal.com>"]
readme = "README.md"
license = "MIT"
classifiers = [
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3.10',
]
packages = [
    { include = "applovin_report" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.10, <3.12"

black = { version = "0.1.7", optional = true }
isort = { version = "0.1.7", optional = true }
flake8 = { version = "0.1.7", optional = true }
flake8-docstrings = { version = "0.1.7", optional = true }
pytest = { version = "0.1.7", optional = true }
pytest-cov = { version = "0.1.7", optional = true }
tox = { version = "0.1.7", optional = true }
virtualenv = { version = "0.1.7", optional = true }
pip = { version = "0.1.7", optional = true }
mkdocs = { version = "0.1.7", optional = true }
mkdocs-include-markdown-plugin = { version = "0.1.7", optional = true }
mkdocs-material = { version = "0.1.7", optional = true }
mkdocstrings-python = { version = "0.1.7", optional = true }
mkdocs-material-extensions = { version = "0.1.7", optional = true }
twine = { version = "0.1.7", optional = true }
mkdocs-autorefs = { version = "0.1.7", optional = true }
pre-commit = { version = "0.1.7", optional = true }
toml = { version = "0.1.7", optional = true }
livereload = { version = "0.1.7", optional = true }
pyreadline = { version = "0.1.7", optional = true }
mike = { version = "0.1.7", optional = true }

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "flake8",
    "flake8-docstrings",
    "pytest-cov"
]

dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml"]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings-python",
    "mkdocs-material-extensions",
    "mkdocs-autorefs",
    "mike"
]




[tool.poetry.group.dev.dependencies]
setuptools = "^67.8.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
[tool.isort]
profile = "black"
